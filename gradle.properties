# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true
# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true
# Enables namespacing of each library's R class so that its R class includes only the
# resources declared in the library itself and none from the library's dependencies,
# thereby reducing the size of the R class for that library
android.nonTransitiveRClass=true
# app
App development project repositories in git
REACT NATIVE
1. BMI Calculator: https://github.com/Error401-incognito/BMIApp.git
2.login:https://github.com/Error401-incognito/login.git
3.imperial system:https://github.com/Error401-incognito/imperial.git
4.Navigation:https://github.com/Error401-incognito/navigation.git
5.TODO:https://github.com/Error401-incognito/TOdo.git
6.Expensemanager:https://github.com/Error401-incognito/expensemanager.git
7.calculator: https://github.com/Error401-incognito/calculator.git

plugins:navigation:
npm install @react-navigation/native @react-navigation/stack react-native-gesture-handler react-native-reanimated
todo:
expo install react-native-gesture-handler react-native-reanimated react-native-screens react-native-safe-area-context @react-native-community/viewpager


commands: npx create-expo-app name
npm start/npx run android


App development project repositories in git:
CORDOVA
1.geolocation: https://github.com/Error401-incognito/geoloc.git
2.login:https://github.com/Error401-incognito/loginc.git
3.Alertapp:https://github.com/Error401-incognito/AlertApp.git
plugins:geolocation:
 cordova plugin add cordova-plugin-geolocation
alert msg:
cordova plugin add cordova-plugin-dialogs


commands:cordova create AlertApp
cd AlertApp
cordova platform add android
cordova build android
cordova run android



App development project repositories in git:
JAVA
1.Text Colour Change:https://github.com/Error401-incognito/colourchagetext.git
2.Alert message:https://github.com/Error401-incognito/alertmsg.git
3.ui ux components: https://github.com/Error401-incognito/uiuxlayout.git
4. Layouts: https://github.com/Error401-incognito/uiuxlayout.git
5.geolocation: https://github.com/Error401-incognito/geolocation.git
6.counterapp:https://github.com/Error401-incognito/counterapp.git


Library management using firebase(already available code):https://github.com/codehunter-sk/Lib_Mgt_02

https://github.com/ramyaa06?tab=repositories

git clone https://github.com/ramyaa06/rn_expenses
rn_navigation
rn_login
rn_textcolor
rn_textalignment
android_layoutbasedform
android_textcolor
android_alertmessage
rn_unitconvertor
rn_bmi
flutter_todolist
cordova_geolocation
cordova_login

import React, { useState } from 'react';
import { View, Text, TextInput, Button, FlatList, StyleSheet, TouchableOpacity } from 'react-native';

const ToDoList = () => {
  const [tasks, setTasks] = useState([]);
  const [taskName, setTaskName] = useState('');

  const addTask = () => {
    if (taskName.trim() !== '') {
      setTasks([...tasks, { name: taskName, done: false }]);
      setTaskName('');
    }
  };

  const toggleTask = (index) => {
    const updatedTasks = [...tasks];
    updatedTasks[index].done = !updatedTasks[index].done;
    setTasks(updatedTasks);
  };

  const deleteTask = (index) => {
    const updatedTasks = [...tasks];
    updatedTasks.splice(index, 1);
    setTasks(updatedTasks);
  };

  return (
    <View style={styles.container}>
      <Text style={styles.heading}>To-Do List</Text>
      <FlatList
        data={tasks}
        keyExtractor={(item, index) => index.toString()}
        renderItem={({ item, index }) => (
          <View style={styles.taskItem}>
            <TouchableOpacity onPress={() => toggleTask(index)}>
              <Text
                style={[
                  styles.taskText,
                  { textDecorationLine: item.done ? 'line-through' : 'none' },
                ]}
              >
                {item.name}
              </Text>
            </TouchableOpacity>
            <TouchableOpacity onPress={() => deleteTask(index)}>
              <Text style={styles.deleteButton}>Delete</Text>
            </TouchableOpacity>
          </View>
        )}
      />
      <View style={styles.inputContainer}>
        <TextInput
          style={styles.input}
          placeholder="Add a new task"
          value={taskName}
          onChangeText={(text) => setTaskName(text)}
        />
        <Button title="Add Task" onPress={addTask} />
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
    backgroundColor: '#fff',
  },
  heading: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 16,
  },
  taskItem: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    marginBottom: 8,
    padding: 8,
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 5,
  },
  taskText: {
    fontSize: 16,
    marginLeft: 8,
  },
  deleteButton: {
    color: 'red',
    marginLeft: 8,
  },
  inputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginTop: 16,
  },
  input: {
    flex: 1,
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    marginRight: 8,
    paddingHorizontal: 8,
    backgroundColor: '#f2f2f2',
  },
});

export default ToDoList;
